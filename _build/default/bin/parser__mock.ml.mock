
type token = 
  | RPARAN
  | LPARAN
  | LAMBDA
  | INT of (
# 6 "bin/parser.mly"
       (int)
# 10 "bin/parser__mock.ml.mock"
)
  | IDENTITY of (
# 5 "bin/parser.mly"
       (string)
# 15 "bin/parser__mock.ml.mock"
)
  | EOF
  | DOT

let menhir_begin_marker =
  0

and (xv_term, xv_sub_expr, xv_prog, xv_expr, xv_app, xv_abstr) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 20 "bin/parser.mly"
      _1
# 27 "bin/parser__mock.ml.mock"
   : 'tv_term) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_sub_expr) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 32 "bin/parser.mly"
      _1
# 33 "bin/parser__mock.ml.mock"
   : 'tv_app) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 31 "bin/parser.mly"
      _1
# 39 "bin/parser__mock.ml.mock"
   : 'tv_abstr) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 27 "bin/parser.mly"
      _1
# 45 "bin/parser__mock.ml.mock"
   : 'tv_sub_expr) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_app) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 17 "bin/parser.mly"
      s
# 51 "bin/parser__mock.ml.mock"
   : (
# 5 "bin/parser.mly"
       (string)
# 55 "bin/parser__mock.ml.mock"
  )) (_startpos_s_ : Lexing.position) (_endpos_s_ : Lexing.position) (_startofs_s_ : int) (_endofs_s_ : int) (_loc_s_ : Lexing.position * Lexing.position) ->
    (
# 17 "bin/parser.mly"
                    (Ast.symbol s)
# 60 "bin/parser__mock.ml.mock"
     : 'tv_term) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 16 "bin/parser.mly"
      i
# 65 "bin/parser__mock.ml.mock"
   : (
# 6 "bin/parser.mly"
       (int)
# 69 "bin/parser__mock.ml.mock"
  )) (_startpos_i_ : Lexing.position) (_endpos_i_ : Lexing.position) (_startofs_i_ : int) (_endofs_i_ : int) (_loc_i_ : Lexing.position * Lexing.position) ->
    (
# 16 "bin/parser.mly"
               ( Ast.int i )
# 74 "bin/parser__mock.ml.mock"
     : 'tv_term) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (_3 : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 21 "bin/parser.mly"
              e
# 79 "bin/parser__mock.ml.mock"
   : 'tv_expr) (_startpos_e_ : Lexing.position) (_endpos_e_ : Lexing.position) (_startofs_e_ : int) (_endofs_e_ : int) (_loc_e_ : Lexing.position * Lexing.position) (_1 : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 21 "bin/parser.mly"
                                ( e )
# 84 "bin/parser__mock.ml.mock"
     : 'tv_sub_expr) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 13 "bin/parser.mly"
           _2
# 89 "bin/parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 13 "bin/parser.mly"
     _1
# 93 "bin/parser__mock.ml.mock"
   : 'tv_expr) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    ((
# 13 "bin/parser.mly"
                ( _1 )
# 98 "bin/parser__mock.ml.mock"
     : 'tv_prog) : (
# 9 "bin/parser.mly"
       (Ast.expr)
# 102 "bin/parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 28 "bin/parser.mly"
               a
# 107 "bin/parser__mock.ml.mock"
   : 'tv_sub_expr) (_startpos_a_ : Lexing.position) (_endpos_a_ : Lexing.position) (_startofs_a_ : int) (_endofs_a_ : int) (_loc_a_ : Lexing.position * Lexing.position) (
# 28 "bin/parser.mly"
      h
# 111 "bin/parser__mock.ml.mock"
   : 'tv_app) (_startpos_h_ : Lexing.position) (_endpos_h_ : Lexing.position) (_startofs_h_ : int) (_endofs_h_ : int) (_loc_h_ : Lexing.position * Lexing.position) ->
    (
# 28 "bin/parser.mly"
                             ( Ast.app h a )
# 116 "bin/parser__mock.ml.mock"
     : 'tv_app) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 24 "bin/parser.mly"
                                 b
# 121 "bin/parser__mock.ml.mock"
   : 'tv_expr) (_startpos_b_ : Lexing.position) (_endpos_b_ : Lexing.position) (_startofs_b_ : int) (_endofs_b_ : int) (_loc_b_ : Lexing.position * Lexing.position) (_3 : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 24 "bin/parser.mly"
              p
# 125 "bin/parser__mock.ml.mock"
   : (
# 5 "bin/parser.mly"
       (string)
# 129 "bin/parser__mock.ml.mock"
  )) (_startpos_p_ : Lexing.position) (_endpos_p_ : Lexing.position) (_startofs_p_ : int) (_endofs_p_ : int) (_loc_p_ : Lexing.position * Lexing.position) (_1 : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 24 "bin/parser.mly"
                                           ( Ast.abstr p b )
# 134 "bin/parser__mock.ml.mock"
     : 'tv_abstr) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_term * 'tv_sub_expr * 'tv_prog * 'tv_expr * 'tv_app * 'tv_abstr)

and menhir_end_marker =
  0
